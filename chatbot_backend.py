from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import spacy
import random
import os

# FastAPI uygulamasÄ±nÄ± baÅŸlat
app = FastAPI()

# CORS Middleware ekle
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # TÃ¼m sitelere izin ver
    allow_credentials=True,
    allow_methods=["GET", "POST", "HEAD", "OPTIONS"],  
    allow_headers=["*"],
)

# NLP modelini yÃ¼kle
try:
    nlp = spacy.load("en_core_web_sm")
except OSError:
    os.system("python -m spacy download en_core_web_sm")
    nlp = spacy.load("en_core_web_sm")

# KullanÄ±cÄ±dan gelen isteÄŸin formatÄ±
class ChatRequest(BaseModel):
    user_id: str
    message: str

# BDT odaklÄ± yanÄ±tlar
BDT_RESPONSES = {
    "kaygÄ±": [
        "KaygÄ±nÄ± yÃ¶netmek iÃ§in derin nefes almayÄ± deneyebilirsin.",
        "KaygÄ±yla baÅŸa Ã§Ä±kmak iÃ§in meditasyon yapabilirsin.",
        "KaygÄ±nÄ± daha iyi anlamaya Ã§alÄ±ÅŸmak faydalÄ± olabilir."
    ],
    "depresyon": [
        "Bir terapiste danÄ±ÅŸmak faydalÄ± olabilir.",
        "Depresyon zaman alÄ±r ama kÃ¼Ã§Ã¼k adÄ±mlarla ilerleyebilirsin.",
        "DuygularÄ±nÄ± paylaÅŸmak iyi gelebilir."
    ]
}

# Chat endpointi
@app.post("/chat")
async def chat_endpoint(request: ChatRequest):
    print(f"ğŸ’¬ Gelen Ä°stek: {request}")  # Gelen veriyi logla
    print(f"ğŸ†” User ID: {request.user_id}, ğŸ“© Message: {request.message}")  

    doc = nlp(request.message.lower())

    for category, responses in BDT_RESPONSES.items():
        if category in request.message.lower():
            return {"response": random.choice(responses)}

    return {"response": "Bu konuda nasÄ±l hissettiÄŸini biraz daha anlatabilir misin?"}

# Ana sayfa
@app.get("/")
async def root():
    return {"message": "API is running! Send requests to /chat"}

# ğŸš€ Render'Ä±n PORT deÄŸiÅŸkenini algÄ±lamasÄ± iÃ§in ekleme:
if __name__ == "__main__":
    import uvicorn
    port = int(os.environ.get("PORT", 8000))  # Render'Ä±n PORT deÄŸiÅŸkenini al
    uvicorn.run(app, host="0.0.0.0", port=port)

    




